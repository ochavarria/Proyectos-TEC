/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Ticket;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Chavas
 */
public class AsignarCategorias extends javax.swing.JFrame {

    ArrayList<Ticket> Clasificados = new ArrayList<Ticket>();
    ArrayList<Ticket> Tickets = Administrador.Server.getInbox();

    public AsignarCategorias() {
        initComponents();
        createJlist();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GBCategorias = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LTickets = new javax.swing.JList();
        BClasificar = new javax.swing.JButton();
        CKRojo = new javax.swing.JCheckBox();
        CKAmarillo = new javax.swing.JCheckBox();
        CKVerde = new javax.swing.JCheckBox();

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jScrollPane1.setViewportView(LTickets);
        LTickets.getAccessibleContext().setAccessibleDescription("");

        BClasificar.setBackground(new java.awt.Color(0, 0, 153));
        BClasificar.setText("Clasificar");
        BClasificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BClasificarActionPerformed(evt);
            }
        });

        CKRojo.setBackground(new java.awt.Color(0, 0, 153));
        GBCategorias.add(CKRojo);
        CKRojo.setForeground(new java.awt.Color(255, 0, 51));
        CKRojo.setText("Rojo");
        CKRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CKRojoActionPerformed(evt);
            }
        });

        CKAmarillo.setBackground(new java.awt.Color(0, 0, 153));
        GBCategorias.add(CKAmarillo);
        CKAmarillo.setForeground(new java.awt.Color(255, 255, 0));
        CKAmarillo.setText("Amarrillo");

        CKVerde.setBackground(new java.awt.Color(0, 0, 153));
        GBCategorias.add(CKVerde);
        CKVerde.setForeground(new java.awt.Color(51, 255, 0));
        CKVerde.setText("Verde");
        CKVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CKVerdeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CKRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CKAmarillo)
                    .addComponent(CKVerde))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BClasificar))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CKRojo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(CKAmarillo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(CKVerde))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(BClasificar)))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CKRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CKRojoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CKRojoActionPerformed

    private void CKVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CKVerdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CKVerdeActionPerformed

    private void BClasificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BClasificarActionPerformed
        int[] selFromList = LTickets.getSelectedIndices();
        for (int i = 0; i < selFromList.length; i++) {
            String sel = (String) (LTickets.getModel().getElementAt(selFromList[i]));
            Clasificar(sel);
        }
    }//GEN-LAST:event_BClasificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsignarCategorias().setVisible(true);
            }
        });
    }

    public void createJlist() {
        DefaultListModel listModel;
        listModel = new DefaultListModel();

        int i;
        for (i = 0; i < Tickets.size(); i++) {
            if (Tickets.get(i).getCategoria() == null)
            {
                String Dato = "Fecha de Recepcion: ";
                Dato += Tickets.get(i).getRecepcion() + "  ";
                Dato += "ID Cliente: " + Tickets.get(i).getID_Cliente() + "  ";
                Dato += "Asunto: " + Tickets.get(i).getAsunto() + "  ";
                
                listModel.addElement(Dato);
            }
        }
        LTickets.setModel(listModel);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BClasificar;
    private javax.swing.JCheckBox CKAmarillo;
    private javax.swing.JCheckBox CKRojo;
    private javax.swing.JCheckBox CKVerde;
    private javax.swing.ButtonGroup GBCategorias;
    private javax.swing.JList LTickets;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables




    public void Clasificar(String Dato) {
        int i;
        for (i = 0; i < Tickets.size(); i++) {
            
            String TicketData = "Fecha de Recepcion: ";
            TicketData += Tickets.get(i).getRecepcion() + "  ";
            TicketData += "ID Cliente: " + Tickets.get(i).getID_Cliente() + "  ";
            TicketData += "Asunto: " + Tickets.get(i).getAsunto() + "  ";
            
            if(TicketData == null ? Dato == null : TicketData.equals(Dato))
            {
                
                if(CKRojo.isSelected())
                {
                    Tickets.get(i).setCategoria("Rojo");  
                    Administrador.Server.addColaRoja(Tickets.get(i));
                    
                    break;
                }
                else
                {
                    if(CKVerde.isSelected())
                    {
                        Tickets.get(i).setCategoria("Verde");
                        Administrador.Server.addColaVerde(Tickets.get(i));
                        
                        break;
                    }
                    else
                    {
                        if(CKAmarillo.isSelected())
                        {
                            Tickets.get(i).setCategoria("Amarillo");
                            Administrador.Server.addColaAmarilla(Tickets.get(i));
                            
                            
                            break;
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Tienes que seleccionar una categoria");  
                            
                        }
                    }
                }
            }
            
        }
        String Data="Se han Actualizado las colas...\n";
        Administrador.Monitoreo(Data);

    }
}
