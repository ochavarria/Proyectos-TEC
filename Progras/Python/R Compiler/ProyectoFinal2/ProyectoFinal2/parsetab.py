
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTERNARYrightIFleftELSErightLEFT_ASSIGNrightEQ_ASSIGNleftRIGHT_ASSIGNleftOROR2leftANDAND2nonassocGTGELTLEEQNEleftPLUSMINUSleftCOLONrightXORleftDOLLARARROBAleftNS_GETNS_GET_INTnonassocLPARENLBRACKETLBBFOR IN IF ELSE WHILE NEXT BREAK REPEAT PRINT LOG ABS FACTORIAL EXP TOLOWER TOUPPER TOSTRING FLOOR ATAN COS TAN SQRT LOG10 LIST FALSE TRUE SYMBOL END_OF_INPUT STR_CONST NUM_CONST NULL_CONST FUNCTION LEFT_ASSIGN EQ_ASSIGN RIGHT_ASSIGN LBB RBB GT GE LT LE EQ NE AND OR AND2 OR2 NS_GET NS_GET_INT NEWLINE LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON PLUS MINUS TIMES DIVIDE TERNARY MODULO XOR ENNE DOLLAR ARROBA END prog : exprlist\n             expr_or_assign : expr\n                      | equal_assignequal_assign : expr EQ_ASSIGN expr_or_assignexpr : NUM_CONST\n           | STR_CONST\n           | NULL_CONST\n           | SYMBOL\n           | LBRACE exprlist RBRACE\n           | LPAREN expr_or_assign RPAREN\n           | expr COLON expr\n           | expr PLUS expr\n           | expr MINUS expr\n           | expr TIMES expr\n           | expr DIVIDE expr\n           | expr XOR expr\n           | expr MODULO expr\n           | expr ENNE expr\n           | expr TERNARY expr\n           | expr LT expr\n           | expr LE expr\n           | expr EQ expr\n           | expr NE expr\n           | expr GE expr\n           | expr GT expr\n           | expr AND expr\n           | expr OR expr\n           | expr AND2 expr\n           | expr OR2 expr\n           | expr LEFT_ASSIGN expr\n           | expr RIGHT_ASSIGN expr\n           | FUNCTION LPAREN formlist RPAREN  expr_or_assign \n           | expr LPAREN sublist RPAREN\n           | IF ifcond expr_or_assign\n           | IF ifcond expr_or_assign ELSE expr_or_assign\n           | FOR forcond expr_or_assign\n           | WHILE cond expr_or_assign\n           | REPEAT expr_or_assign\n           | expr LBB sublist RBRACKET RBRACKET\n           | expr LBRACKET sublist RBRACKET\n           | SYMBOL NS_GET SYMBOL\n           | SYMBOL NS_GET STR_CONST\n           | STR_CONST NS_GET SYMBOL\n           | STR_CONST NS_GET STR_CONST\n           | NEXT\n           | BREAK cond : LPAREN expr RPARENifcond : LPAREN expr RPARENforcond : LPAREN SYMBOL IN expr RPARENexprlist : expr_or_assign\n                | exprlist SEMI expr_or_assign\n                | exprlist SEMI\n                sublist : sub\n               | sublist COMMA subsub : expr            \n        | SYMBOL EQ_ASSIGN    \n        | SYMBOL EQ_ASSIGN expr\n        | STR_CONST EQ_ASSIGN        \n        | STR_CONST EQ_ASSIGN expr    \n        | NULL_CONST EQ_ASSIGN\n        | NULL_CONST EQ_ASSIGN exprformlist : SYMBOL\n                | SYMBOL EQ_ASSIGN expr\n                | formlist COMMA SYMBOL\n                | formlist COMMA SYMBOL EQ_ASSIGN expr'
    
_lr_action_items = {'RIGHT_ASSIGN':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,32,-5,-46,-38,-42,-41,-37,32,-44,-43,-34,32,-36,-9,-10,-31,-29,-8,-6,-7,32,32,-16,-13,-21,-4,-23,-20,-11,-12,-25,32,32,32,-24,-22,-28,-26,32,32,-27,-40,-33,-35,32,-32,32,32,32,32,-39,32,]),'SYMBOL':([0,3,12,13,19,20,21,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,107,108,109,110,112,113,126,127,],[1,1,1,1,58,1,1,62,1,1,65,1,68,1,1,1,74,1,1,1,1,1,1,1,74,1,1,1,1,1,1,1,74,1,1,1,1,1,1,-47,1,-48,1,1,119,1,1,74,1,1,1,-49,]),'OR2':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,33,-5,-46,-38,-42,-41,-37,33,-44,-43,-34,33,-36,-9,-10,33,-29,-8,-6,-7,33,33,-16,-13,-21,-4,-23,-20,-11,-12,-25,33,33,33,-24,-22,-28,-26,33,33,-27,-40,-33,-35,33,-32,33,33,33,33,-39,33,]),'LBRACKET':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,34,-5,-46,-38,-42,-41,-37,34,-44,-43,-34,34,-36,-9,-10,34,34,-8,-6,-7,34,34,34,34,34,-4,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-40,-33,-35,34,-32,34,34,34,34,-39,34,]),'WHILE':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-47,2,-48,2,2,2,2,2,2,2,2,-49,]),'GT':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,45,-5,-46,-38,-42,-41,-37,45,-44,-43,-34,45,-36,-9,-10,45,45,-8,-6,-7,45,45,-16,-13,None,-4,None,None,-11,-12,None,45,45,45,None,None,45,45,45,45,45,-40,-33,-35,45,-32,45,45,45,45,-39,45,]),'TERNARY':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,35,-5,-46,-38,-42,-41,-37,35,-44,-43,-34,35,-36,-9,-10,-31,-29,-8,-6,-7,35,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,35,35,35,-24,-22,-28,-26,35,-30,-27,-40,-33,-35,35,-32,35,35,35,35,-39,35,]),'MODULO':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,46,-5,-46,-38,-42,-41,-37,46,-44,-43,-34,46,-36,-9,-10,-31,-29,-8,-6,-7,46,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,46,46,46,-24,-22,-28,-26,46,-30,-27,-40,-33,-35,46,-32,46,46,46,46,-39,46,]),'MINUS':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,37,-5,-46,-38,-42,-41,-37,37,-44,-43,-34,37,-36,-9,-10,37,37,-8,-6,-7,37,37,-16,-13,37,-4,37,37,-11,-12,37,37,37,37,37,37,37,37,37,37,37,-40,-33,-35,37,-32,37,37,37,37,-39,37,]),'DIVIDE':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,47,-5,-46,-38,-42,-41,-37,47,-44,-43,-34,47,-36,-9,-10,-31,-29,-8,-6,-7,47,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,47,47,47,-24,-22,-28,-26,47,-30,-27,-40,-33,-35,47,-32,47,47,47,47,-39,47,]),'LE':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,38,-5,-46,-38,-42,-41,-37,38,-44,-43,-34,38,-36,-9,-10,38,38,-8,-6,-7,38,38,-16,-13,None,-4,None,None,-11,-12,None,38,38,38,None,None,38,38,38,38,38,-40,-33,-35,38,-32,38,38,38,38,-39,38,]),'RPAREN':([1,4,5,6,7,16,17,18,22,30,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,109,111,112,113,115,116,117,118,119,120,121,122,123,124,125,128,],[-8,-3,-6,-45,-7,-2,-5,-46,-38,70,-42,-41,-37,102,-44,-43,-34,104,-62,106,-36,-9,-10,-31,-29,-8,-53,-6,-7,-55,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,115,-22,-28,-26,-18,-30,-27,-56,-40,-58,-60,-33,-35,-63,-32,-64,127,-57,-54,-59,-61,-39,-65,]),'SEMI':([1,4,5,6,7,14,15,16,17,18,22,29,31,57,58,59,61,62,63,67,69,70,71,72,73,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,118,125,],[-8,-3,-6,-45,-7,31,-50,-2,-5,-46,-38,31,-52,-42,-41,-37,-44,-43,-34,-36,-9,-10,-51,-31,-29,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-40,-33,-35,-32,-39,]),'STR_CONST':([0,3,12,13,19,20,21,23,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[5,5,5,5,57,5,5,61,5,5,5,5,5,5,77,5,5,5,5,5,5,5,77,5,5,5,5,5,5,5,77,5,5,5,5,5,5,-47,5,-48,5,5,5,5,77,5,5,5,-49,]),'EQ_ASSIGN':([1,4,5,6,7,16,17,18,22,57,58,59,61,62,63,65,67,69,70,72,73,74,77,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,118,119,125,],[-8,-3,-6,-45,-7,39,-5,-46,-38,-42,-41,-37,-44,-43,-34,105,-36,-9,-10,-31,-29,109,112,113,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-40,-33,-35,-32,126,-39,]),'NE':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,40,-5,-46,-38,-42,-41,-37,40,-44,-43,-34,40,-36,-9,-10,40,40,-8,-6,-7,40,40,-16,-13,None,-4,None,None,-11,-12,None,40,40,40,None,None,40,40,40,40,40,-40,-33,-35,40,-32,40,40,40,40,-39,40,]),'NEXT':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-47,6,-48,6,6,6,6,6,6,6,6,-49,]),'LT':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,41,-5,-46,-38,-42,-41,-37,41,-44,-43,-34,41,-36,-9,-10,41,41,-8,-6,-7,41,41,-16,-13,None,-4,None,None,-11,-12,None,41,41,41,None,None,41,41,41,41,41,-40,-33,-35,41,-32,41,41,41,41,-39,41,]),'LBB':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,42,-5,-46,-38,-42,-41,-37,42,-44,-43,-34,42,-36,-9,-10,42,42,-8,-6,-7,42,42,42,42,42,-4,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-40,-33,-35,42,-32,42,42,42,42,-39,42,]),'PLUS':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,44,-5,-46,-38,-42,-41,-37,44,-44,-43,-34,44,-36,-9,-10,44,44,-8,-6,-7,44,44,-16,-13,44,-4,44,44,-11,-12,44,44,44,44,44,44,44,44,44,44,44,-40,-33,-35,44,-32,44,44,44,44,-39,44,]),'NULL_CONST':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[7,7,7,7,7,7,7,7,7,7,7,7,78,7,7,7,7,7,7,7,78,7,7,7,7,7,7,7,78,7,7,7,7,7,7,-47,7,-48,7,7,7,7,78,7,7,7,-49,]),'COLON':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,43,-5,-46,-38,-42,-41,-37,43,-44,-43,-34,43,-36,-9,-10,43,43,-8,-6,-7,43,43,-16,43,43,-4,43,43,-11,43,43,43,43,43,43,43,43,43,43,43,43,-40,-33,-35,43,-32,43,43,43,43,-39,43,]),'AND2':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,52,-5,-46,-38,-42,-41,-37,52,-44,-43,-34,52,-36,-9,-10,52,52,-8,-6,-7,52,52,-16,-13,-21,-4,-23,-20,-11,-12,-25,52,52,52,-24,-22,-28,-26,52,52,52,-40,-33,-35,52,-32,52,52,52,52,-39,52,]),'$end':([1,4,5,6,7,8,14,15,16,17,18,22,31,57,58,59,61,62,63,67,69,70,71,72,73,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,118,125,],[-8,-3,-6,-45,-7,0,-1,-50,-2,-5,-46,-38,-52,-42,-41,-37,-44,-43,-34,-36,-9,-10,-51,-31,-29,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-40,-33,-35,-32,-39,]),'FUNCTION':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-47,10,-48,10,10,10,10,10,10,10,10,-49,]),'REPEAT':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-47,3,-48,3,3,3,3,3,3,3,3,-49,]),'XOR':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,36,-5,-46,-38,-42,-41,-37,36,-44,-43,-34,36,-36,-9,-10,36,36,-8,-6,-7,36,36,36,36,36,-4,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-40,-33,-35,36,-32,36,36,36,36,-39,36,]),'RBRACE':([1,4,5,6,7,15,16,17,18,22,29,31,57,58,59,61,62,63,67,69,70,71,72,73,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,118,125,],[-8,-3,-6,-45,-7,-50,-2,-5,-46,-38,69,-52,-42,-41,-37,-44,-43,-34,-36,-9,-10,-51,-31,-29,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-40,-33,-35,-32,-39,]),'FOR':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-47,11,-48,11,11,11,11,11,11,11,11,-49,]),'TIMES':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,48,-5,-46,-38,-42,-41,-37,48,-44,-43,-34,48,-36,-9,-10,-31,-29,-8,-6,-7,48,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,48,48,48,-24,-22,-28,-26,48,-30,-27,-40,-33,-35,48,-32,48,48,48,48,-39,48,]),'GE':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,49,-5,-46,-38,-42,-41,-37,49,-44,-43,-34,49,-36,-9,-10,49,49,-8,-6,-7,49,49,-16,-13,None,-4,None,None,-11,-12,None,49,49,49,None,None,49,49,49,49,49,-40,-33,-35,49,-32,49,49,49,49,-39,49,]),'LPAREN':([0,1,2,3,4,5,6,7,9,10,11,12,13,16,17,18,20,21,22,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,120,121,123,124,125,126,127,128,],[13,-8,21,13,-3,-6,-45,-7,25,26,28,13,13,50,-5,-46,13,13,-38,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-42,-41,-37,50,-44,-43,-34,50,-36,-9,-10,50,50,-8,-6,-7,50,50,50,50,50,-4,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-47,13,-48,13,13,13,13,13,-40,13,13,-33,-35,50,-32,50,50,50,50,-39,13,-49,50,]),'IN':([68,],[108,]),'ELSE':([1,4,5,6,7,16,17,18,22,57,58,59,61,62,63,67,69,70,72,73,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,118,125,],[-8,-3,-6,-45,-7,-2,-5,-46,-38,-42,-41,-37,-44,-43,103,-36,-9,-10,-31,-29,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-40,-33,-35,-32,-39,]),'EQ':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,51,-5,-46,-38,-42,-41,-37,51,-44,-43,-34,51,-36,-9,-10,51,51,-8,-6,-7,51,51,-16,-13,None,-4,None,None,-11,-12,None,51,51,51,None,None,51,51,51,51,51,-40,-33,-35,51,-32,51,51,51,51,-39,51,]),'LEFT_ASSIGN':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,55,-5,-46,-38,-42,-41,-37,55,-44,-43,-34,55,-36,-9,-10,-31,-29,-8,-6,-7,55,55,-16,-13,-21,-4,-23,-20,-11,-12,-25,55,55,55,-24,-22,-28,-26,55,55,-27,-40,-33,-35,55,-32,55,55,55,55,-39,55,]),'IF':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-47,9,-48,9,9,9,9,9,9,9,9,-49,]),'AND':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,53,-5,-46,-38,-42,-41,-37,53,-44,-43,-34,53,-36,-9,-10,53,53,-8,-6,-7,53,53,-16,-13,-21,-4,-23,-20,-11,-12,-25,53,53,53,-24,-22,-28,-26,53,53,53,-40,-33,-35,53,-32,53,53,53,53,-39,53,]),'LBRACE':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-47,12,-48,12,12,12,12,12,12,12,12,-49,]),'ENNE':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,54,-5,-46,-38,-42,-41,-37,54,-44,-43,-34,54,-36,-9,-10,-31,-29,-8,-6,-7,54,-19,-16,-13,-21,-4,-23,-20,-11,-12,-25,54,54,54,-24,-22,-28,-26,54,-30,-27,-40,-33,-35,54,-32,54,54,54,54,-39,54,]),'NUM_CONST':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-47,17,-48,17,17,17,17,17,17,17,17,-49,]),'NS_GET':([1,5,74,77,],[19,23,19,23,]),'BREAK':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,102,103,104,105,106,108,109,110,112,113,126,127,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-47,18,-48,18,18,18,18,18,18,18,18,-49,]),'RBRACKET':([1,4,5,6,7,16,17,18,22,57,58,59,61,62,63,67,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,109,111,112,113,114,115,116,118,121,122,123,124,125,],[-8,-3,-6,-45,-7,-2,-5,-46,-38,-42,-41,-37,-44,-43,-34,-36,-9,-10,-31,-29,-8,111,-53,-6,-7,-55,-19,-16,-13,-21,-4,-23,-20,114,-11,-12,-25,-17,-15,-14,-24,-22,-28,-26,-18,-30,-27,-56,-40,-58,-60,125,-33,-35,-32,-57,-54,-59,-61,-39,]),'COMMA':([1,4,5,6,7,16,17,18,22,57,58,59,61,62,63,65,66,67,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,109,111,112,113,115,116,117,118,119,121,122,123,124,125,128,],[-8,-3,-6,-45,-7,-2,-5,-46,-38,-42,-41,-37,-44,-43,-34,-62,107,-36,-9,-10,-31,-29,-8,110,-53,-6,-7,-55,-19,-16,-13,-21,-4,-23,-20,110,-11,-12,-25,-17,-15,-14,-24,110,-22,-28,-26,-18,-30,-27,-56,-40,-58,-60,-33,-35,-63,-32,-64,-57,-54,-59,-61,-39,-65,]),'OR':([1,4,5,6,7,16,17,18,22,57,58,59,60,61,62,63,64,67,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,111,115,116,117,118,120,121,123,124,125,128,],[-8,-3,-6,-45,-7,56,-5,-46,-38,-42,-41,-37,56,-44,-43,-34,56,-36,-9,-10,56,-29,-8,-6,-7,56,56,-16,-13,-21,-4,-23,-20,-11,-12,-25,56,56,56,-24,-22,-28,-26,56,56,-27,-40,-33,-35,56,-32,56,56,56,56,-39,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_or_assign':([0,3,12,13,20,24,27,31,39,103,106,],[15,22,15,30,59,63,67,71,84,116,118,]),'sub':([34,42,50,110,],[76,76,76,122,]),'ifcond':([9,],[24,]),'expr':([0,3,12,13,20,21,24,25,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,103,105,106,108,109,110,112,113,126,],[16,16,16,16,16,60,16,64,16,16,72,73,79,80,81,82,83,16,85,86,79,88,89,90,91,92,93,94,79,96,97,98,99,100,101,16,117,16,120,121,79,123,124,128,]),'sublist':([34,42,50,],[75,87,95,]),'forcond':([11,],[27,]),'prog':([0,],[8,]),'cond':([2,],[20,]),'equal_assign':([0,3,12,13,20,24,27,31,39,103,106,],[4,4,4,4,4,4,4,4,4,4,4,]),'exprlist':([0,12,],[14,29,]),'formlist':([26,],[66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> exprlist','prog',1,'p_prog','ParserR.py',60),
  ('expr_or_assign -> expr','expr_or_assign',1,'p_expr_or_assign','ParserR.py',66),
  ('expr_or_assign -> equal_assign','expr_or_assign',1,'p_expr_or_assign','ParserR.py',67),
  ('equal_assign -> expr EQ_ASSIGN expr_or_assign','equal_assign',3,'p_equal_assign','ParserR.py',70),
  ('expr -> NUM_CONST','expr',1,'p_expr','ParserR.py',73),
  ('expr -> STR_CONST','expr',1,'p_expr','ParserR.py',74),
  ('expr -> NULL_CONST','expr',1,'p_expr','ParserR.py',75),
  ('expr -> SYMBOL','expr',1,'p_expr','ParserR.py',76),
  ('expr -> LBRACE exprlist RBRACE','expr',3,'p_expr','ParserR.py',77),
  ('expr -> LPAREN expr_or_assign RPAREN','expr',3,'p_expr','ParserR.py',78),
  ('expr -> expr COLON expr','expr',3,'p_expr','ParserR.py',79),
  ('expr -> expr PLUS expr','expr',3,'p_expr','ParserR.py',80),
  ('expr -> expr MINUS expr','expr',3,'p_expr','ParserR.py',81),
  ('expr -> expr TIMES expr','expr',3,'p_expr','ParserR.py',82),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','ParserR.py',83),
  ('expr -> expr XOR expr','expr',3,'p_expr','ParserR.py',84),
  ('expr -> expr MODULO expr','expr',3,'p_expr','ParserR.py',85),
  ('expr -> expr ENNE expr','expr',3,'p_expr','ParserR.py',86),
  ('expr -> expr TERNARY expr','expr',3,'p_expr','ParserR.py',87),
  ('expr -> expr LT expr','expr',3,'p_expr','ParserR.py',88),
  ('expr -> expr LE expr','expr',3,'p_expr','ParserR.py',89),
  ('expr -> expr EQ expr','expr',3,'p_expr','ParserR.py',90),
  ('expr -> expr NE expr','expr',3,'p_expr','ParserR.py',91),
  ('expr -> expr GE expr','expr',3,'p_expr','ParserR.py',92),
  ('expr -> expr GT expr','expr',3,'p_expr','ParserR.py',93),
  ('expr -> expr AND expr','expr',3,'p_expr','ParserR.py',94),
  ('expr -> expr OR expr','expr',3,'p_expr','ParserR.py',95),
  ('expr -> expr AND2 expr','expr',3,'p_expr','ParserR.py',96),
  ('expr -> expr OR2 expr','expr',3,'p_expr','ParserR.py',97),
  ('expr -> expr LEFT_ASSIGN expr','expr',3,'p_expr','ParserR.py',98),
  ('expr -> expr RIGHT_ASSIGN expr','expr',3,'p_expr','ParserR.py',99),
  ('expr -> FUNCTION LPAREN formlist RPAREN expr_or_assign','expr',5,'p_expr','ParserR.py',100),
  ('expr -> expr LPAREN sublist RPAREN','expr',4,'p_expr','ParserR.py',101),
  ('expr -> IF ifcond expr_or_assign','expr',3,'p_expr','ParserR.py',102),
  ('expr -> IF ifcond expr_or_assign ELSE expr_or_assign','expr',5,'p_expr','ParserR.py',103),
  ('expr -> FOR forcond expr_or_assign','expr',3,'p_expr','ParserR.py',104),
  ('expr -> WHILE cond expr_or_assign','expr',3,'p_expr','ParserR.py',105),
  ('expr -> REPEAT expr_or_assign','expr',2,'p_expr','ParserR.py',106),
  ('expr -> expr LBB sublist RBRACKET RBRACKET','expr',5,'p_expr','ParserR.py',107),
  ('expr -> expr LBRACKET sublist RBRACKET','expr',4,'p_expr','ParserR.py',108),
  ('expr -> SYMBOL NS_GET SYMBOL','expr',3,'p_expr','ParserR.py',109),
  ('expr -> SYMBOL NS_GET STR_CONST','expr',3,'p_expr','ParserR.py',110),
  ('expr -> STR_CONST NS_GET SYMBOL','expr',3,'p_expr','ParserR.py',111),
  ('expr -> STR_CONST NS_GET STR_CONST','expr',3,'p_expr','ParserR.py',112),
  ('expr -> NEXT','expr',1,'p_expr','ParserR.py',113),
  ('expr -> BREAK','expr',1,'p_expr','ParserR.py',114),
  ('cond -> LPAREN expr RPAREN','cond',3,'p_cond','ParserR.py',117),
  ('ifcond -> LPAREN expr RPAREN','ifcond',3,'p_ifcond','ParserR.py',120),
  ('forcond -> LPAREN SYMBOL IN expr RPAREN','forcond',5,'p_forcond','ParserR.py',123),
  ('exprlist -> expr_or_assign','exprlist',1,'p_exprlist','ParserR.py',126),
  ('exprlist -> exprlist SEMI expr_or_assign','exprlist',3,'p_exprlist','ParserR.py',127),
  ('exprlist -> exprlist SEMI','exprlist',2,'p_exprlist','ParserR.py',128),
  ('sublist -> sub','sublist',1,'p_sublist','ParserR.py',131),
  ('sublist -> sublist COMMA sub','sublist',3,'p_sublist','ParserR.py',132),
  ('sub -> expr','sub',1,'p_sub','ParserR.py',135),
  ('sub -> SYMBOL EQ_ASSIGN','sub',2,'p_sub','ParserR.py',136),
  ('sub -> SYMBOL EQ_ASSIGN expr','sub',3,'p_sub','ParserR.py',137),
  ('sub -> STR_CONST EQ_ASSIGN','sub',2,'p_sub','ParserR.py',138),
  ('sub -> STR_CONST EQ_ASSIGN expr','sub',3,'p_sub','ParserR.py',139),
  ('sub -> NULL_CONST EQ_ASSIGN','sub',2,'p_sub','ParserR.py',140),
  ('sub -> NULL_CONST EQ_ASSIGN expr','sub',3,'p_sub','ParserR.py',141),
  ('formlist -> SYMBOL','formlist',1,'p_formlist','ParserR.py',144),
  ('formlist -> SYMBOL EQ_ASSIGN expr','formlist',3,'p_formlist','ParserR.py',145),
  ('formlist -> formlist COMMA SYMBOL','formlist',3,'p_formlist','ParserR.py',146),
  ('formlist -> formlist COMMA SYMBOL EQ_ASSIGN expr','formlist',5,'p_formlist','ParserR.py',147),
]
